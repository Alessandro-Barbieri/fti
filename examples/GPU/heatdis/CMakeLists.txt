set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -DGPUSUPPORT -D__RECOVER__")
set(CUDA_NVCC_FLAGS "${CUDA_NVCC_FLAGS} -DGPUSUPPORT -lineinfo -D__RECOVER__")
add_executable(heatdis.exe heatdis.c cudaCode.cu)
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -DGPUSUPPORT -D__RECOVER__")
string(STRIP ${MPI_C_LIBRARIES} MPI_C_LIBRARIES)
string(STRIP ${MPI_C_LINK_FLAGS} MPI_C_LINK_FLAGS)

target_link_libraries(heatdis.exe -L${PROJECT_BINARY_DIR}/lib fti m cuda ${MPI_C_LIBRARIES} ${CUDA_LIBRARIES} ${MPI_C_LINK_FLAGS})

set(INSTALL_DIR ${CMAKE_INSTALL_PREFIX})  

set(SIZE 48)
set(NUMTASKS 256)
set(CPUSPERTASK 5)
set(EXP "DCP") 
set(STACKSIZE 20)
set(DCP 1)  
set(NODESIZE 16)
set(NUMNODES 16) 

configure_file(config.fti.in ${CMAKE_CURRENT_SOURCE_DIR}/DCP.fti @ONLY)
set(DCP 0)  
set(EXP "INMEM") 
configure_file(config.fti.in ${CMAKE_CURRENT_SOURCE_DIR}/INMEM.fti @ONLY)
set(DCP 0)  
set(EXP "ORIG") 
configure_file(config.fti.in ${CMAKE_CURRENT_SOURCE_DIR}/ORIG.fti @ONLY)

configure_file(test.sh.in ${CMAKE_CURRENT_SOURCE_DIR}/heatdis.sh @ONLY)

set_property(TARGET heatdis.exe PROPERTY C_STANDARD 99)  
set_property(TARGET heatdis.exe APPEND PROPERTY COMPILE_FLAGS ${MPI_C_COMPILE_FLAGS})
set_property(TARGET heatdis.exe APPEND PROPERTY LINK_FLAGS ${MPI_C_LINK_FLAGS})
#set_property(TARGET heatdis.exe APPEND PROPERTY COMPILE_FLAGS "-L${CMAKE_INSTALL_PREFIX}/include")


file(INSTALL removeDir.sh DESTINATION ${CMAKE_CURRENT_BINARY_DIR} PERMISSIONS OWNER_READ OWNER_WRITE  GROUP_READ GROUP_WRITE  WORLD_READ WORLD_WRITE OWNER_EXECUTE)
file(INSTALL heatdis.sh DESTINATION ${CMAKE_CURRENT_BINARY_DIR} PERMISSIONS OWNER_READ OWNER_WRITE  GROUP_READ GROUP_WRITE  WORLD_READ WORLD_WRITE)

file(INSTALL INMEM.fti DESTINATION ${CMAKE_CURRENT_BINARY_DIR} PERMISSIONS OWNER_READ OWNER_WRITE  GROUP_READ GROUP_WRITE  WORLD_READ WORLD_WRITE)
file(INSTALL ORIG.fti DESTINATION ${CMAKE_CURRENT_BINARY_DIR} PERMISSIONS OWNER_READ OWNER_WRITE  GROUP_READ GROUP_WRITE  WORLD_READ WORLD_WRITE)
file(INSTALL DCP.fti DESTINATION ${CMAKE_CURRENT_BINARY_DIR} PERMISSIONS OWNER_READ OWNER_WRITE  GROUP_READ GROUP_WRITE  WORLD_READ WORLD_WRITE)

