#!/bin/bash

# ----------------------------- ITF Test functions ----------------------------

compile_fti() {
    # Compile FTI using a specific cmake version
    #
    # Details:
    # This test is intended for CI only, hence the hard-coded path.
    # If you wish to use this test locally, change the cmd variable.

    param_parse '+version' $@

    local cmd="/opt/cmake/$version/bin/cmake"
    local libdir="$rootdir/install/lib" # Default name for the install script

    check_file_exists "$cmd" "CMake $version installation not found"
    
    echo "$($cmd --version)"
    check_equals "$($cmd --version | grep $version -c)" '1' "Could not validate CMake version $version"

    $rootdir/install.sh

    if [ ! -d "$libdir" ]; then
        echo "$libdir does not exist"
        libdir="${libdir}64" # lib64 as the last folder alternative
        if [ ! -d "$libdir" ]; then
            echo "$libdir does not exist"
            ls $rootdir/install
            fail 'Could not find lib directory in install'
        fi
    fi
    
    check_file_exists "$libdir/libfti.a" 'Compilation failed for libfti.a'
    assert_file_exists "$libdir/libfti.so" 'Compilation failed for libfti.so'
}

setup() {
    rootdir=$(git rev-parse --show-toplevel)
    rm -rf $rootdir/install
}

teardown() {
    rm -rf $rootdir/build
    unset rootdir
}

# ------------------------- ITF Test Case Declaration -------------------------

itf_fixture 'compile_fti' 'setup' 'teardown'
supported=( '3.3' '3.4' '3.5' '3.6' '3.7' '3.8' '3.9' )

for s in ${supported[@]}; do
    itf_case 'compile_fti' "--version=$s"
done

unset supported
