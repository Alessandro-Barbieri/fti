#!/bin/bash

shortname() {
    echo "dCP Corrupt Layer"
}

name() {
    echo "$(shortname) io=$(iolib_id_to_name $iolib) recovery=$recovery_pretty"
}

setup() {
    # Constants
    iolib=$(iolib_name_to_id 'POSIX')
    head=0

    # Variables
    recovery=$1 # Accepts 0 or 1 (fifth argument on test application)
    recovery_pretty='FTI_Recover'
    if [ $recovery -ne 0 ]; then
        recovery_pretty='FTI_RecoverVar'
    fi

    # Config file settings
    fti_config_set "ckpt_io" "$iolib"
    fti_config_set "head" "$head"

    fti_config_set "enable_dcp" '1'
    fti_config_set "dcp_mode" '1'
    fti_config_set 'ckpt_l1' '2'

    fti_config_set 'inline_l2' '1'
    fti_config_set 'inline_l3' '1'
    fti_config_set 'inline_l4' '1'
    
    fti_config_set "dcp_block_size" '4096'
    fti_config_set "dcp_stack_size" '10'
}

teardown() {
    unset iolib
    unset head
    unset recovery
    unset recovery_pretty
}

runtest() {
    local app='./checkDCPPosix.exe'
    local simulate_crash=1
    local diffsizes=0

    app_run $app $cfgfile $simulate_crash $diffsizes $recovery
    # Missing the run.sh contents here
    assert_equals $? 0 'FTI should recover from corrupted data'
}
