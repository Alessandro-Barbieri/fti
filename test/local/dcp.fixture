#!/bin/bash

echo -e "[ \033[1m*** Testing dCP POSIX: head=0 ***\033[m ]"
(
    set -x
    bash checkDCPposix.sh 0 NOICP &>>check.log
)
cd @CMAKE_SOURCE_DIR@/test/local/diffckpt
N=16
TEST_MODE=$2 make run-test-nohead-posix >out
MKE=$?
awk '
            BEGIN {VAL=100; dcpEnabled=0};
            /L4 dCP requested, but dCP is disabled!/ {print "dCP is disabled!"; exit(-1)}
            /FTI  dCP Message/ {dcpEnabled=1};
            {print}; 
            /DEBUG/ {VAL=$10}; 
            /Total CP data/ && (($19*1.0)<VAL || ($19*1.0)>(VAL+2)) {exit(-1)}; 
            /Ckpt. ID 7/ {VAL=0}
            END { if ( !dcpEnabled ) { print "dCP is disabled!"; exit(-1) } } 
        ' out
AWK=$?
if [[ $AWK -eq 0 ]] && [[ $MKE -eq 0 ]]; then
    GRP=$(grep $2 out | wc -l)
    RTN=$((GRP - N))
else
    RTN=255
fi
cd @CMAKE_BINARY_DIR@/test/local
exit $RTN

echo -e "[ \033[1m*** Testing dCP POSIX: head=1 ***\033[m ]"
(
    set -x
    bash checkDCPposix.sh 1 NOICP &>>check.log
)
TEST_MODE=$2 make run-test-head-posix >out
MKE=$?
awk '
            BEGIN {VAL=100; dcpEnabled=0};
            /L4 dCP requested, but dCP is disabled!/ {print "dCP is disabled!"; exit(-1)}
            /FTI  dCP Message/ {dcpEnabled=1};
            {print}; 
            /DEBUG/ {VAL=$10}; 
            /Total CP data/ && (($19*1.0)<VAL || ($19*1.0)>(VAL+2)) {exit(-1)}; 
            /Ckpt. ID 7/ {VAL=0}
            END { if ( !dcpEnabled ) { print "dCP is disabled!"; exit(-1) } } 
        ' out
AWK=$?
if [[ $AWK -eq 0 ]] && [[ $MKE -eq 0 ]]; then
    GRP=$(grep $2 out | wc -l)
    RTN=$((GRP - N))
else
    RTN=255
fi

echo -e "[ \033[1m*** Testing DCP Posix Corrupt Layer :  ***\033[m ]"
cd diffckpt
(
    set -x
    bash run.sh 0 &>>check.log
)
check_return_val $?
if [ $testFailed = 1 ]; then
    echo -e "DCP Posix Corrupt Layer  failed" >>failed.log
    testFailed=0
fi

echo -e "[ \033[1m*** Testing DCP Posix Corrupt Layer : Recover Var ***\033[m ]"
(
    set -x
    bash run.sh 1 &>>check.log
)
check_return_val $?
if [ $testFailed = 1 ]; then
    echo -e "DCP Posix Corrupt Layer with Recover Var" >>failed.log
    testFailed=0
fi
cd ..

shortname() {
    echo "dCP"
}

name() {
    echo "$(shortname) io=$(iolib_id_to_name $iolib) head=$head"
}

setup() {
    cfgfile="/tmp/configfile"

    iolib=$(iolib_name_to_id 'POSIX')
    head=$1

    fti_config_new "$cfgfile"
    fti_config_set "$cfgfile" "ckpt_io" "$iolib"
    fti_config_set "$cfgfile" "enable_dcp" '1'
    fti_config_set "$cfgfile" "dcp_block_size" '4096'
    fti_config_set "$cfgfile" "dcp_stack_size" '10'
}

teardown() {
    unset cfgfile
    unset iolib
    unset level
    rm -rf "$cfgfile"
}

runtest() {
    assert_app_success $? # this is the one
}
