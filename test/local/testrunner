#!/bin/bash

execute_case() {
    let ntests=$ntests+1
    test_case $@
    if [ ! $? -eq 0 ]; then
        let nfailures=$nfailures+1
    fi
}

execute_suites() {
    # Execute a set of suites for each argument value
    #
    # Parameters
    # $@: A sequence of test suite names

    while [ $# -gt 0 ]; do
        source "$1.fixture"
        print_color $COLOR_WHITEBOLD "Executing Suite $1\n"
        nlines=$(grep -c "^" "$1.suite")
        while IFS= read -r line; do
            print_color $COLOR_WHITEBOLD "Test ($(($ntests + 1))/$nlines) "
            execute_case $line
        done <"$1.suite"
        shift
    done
}

source testengine
declare -a arguments=()
nargs=0
while [[ $# -gt 0 ]]; do
    case $1 in
    -t | --set-timeout)
        engine_set_timeout $2
        shift
        shift
        ;;
    -c | --custom-params)
        custom=0
        shift
        ;;
    -h | --help)
        #display_usage
        exit 0
        ;;
    *)
        arguments[$nargs]="$1"
        let nargs=$nargs+1
        shift
        ;;
    esac
done

ntests=0
nfailures=0

if [ -z $custom ]; then
    execute_suites "${arguments[@]}"
else
    source "${arguments[0]}.fixture"
    unset 'arguments[0]'
    execute_case "${arguments[@]}"
fi

let npassed=$ntests-$nfailures
print_color $COLOR_WHITEBOLD '---SUMMARY---\n'
print_color $COLOR_WHITEBOLD "EXECUTED:\t$ntests\n"
print_color $COLOR_GREENBOLD "PASSED:\t\t$npassed\n"
print_color $COLOR_REDBOLD "FAILED:\t\t$nfailures\n"
